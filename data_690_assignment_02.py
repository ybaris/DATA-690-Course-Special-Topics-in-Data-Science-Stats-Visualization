# -*- coding: utf-8 -*-
"""DATA_690_Assignment-02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LgUc-As3aO2dX34fby5SjQ2Qiu3IRx_D

# Assignment 02
Prompts a user to enter 10 integers. If the user enters anything other than integers, remind her that only integers are allowed and let her retry. Don't allow the user to enter more than 10 or less than 10 integers. Display the 10 integers back to the user at the end. Calculate the following statistics from the 10 integers entered:

- Minimum
- Maximum
- Range
- Mean
- Variance
- Standard Deviation
Note:

## Use the basic Python concepts and methods. Special Python libraries such as statistics, scipy, or numpy are not allowed. You may need to use:

- loops (finite and/or infinite loop)
- break/continue
- try/except
- input() function
- int() function

Implement the solution in the following two different formats:

- A Jupyter Notebook (.ipynb)
- A Python script (.py)
Your source code should be well formatted and easy to read and understand.

Provide good comments/documentations:

Use both Markdown and comments in the Jupyter Notebook.
Use comments in the Python script.
Your user prompts, use inputs and output displays should be nicely formatted when users run your program.

Create a subfolder named "Assignment-01" in your GitHub repository (WANG-690-FALL-2020) and upload the two files to the subfolder.

Copy your GitHub repository URL to your assignment submission in Blackboard. No files should be uploaded to the BB.
"""

# firstly we need to create an empty list
numbers = []
# We need exactly 10 integers, so we need to get input till i reaches 10. With that 'numbers' list will get 10 elements.
i = 0
while i < 10: 
    try:
      # Get user input
      is_int = int(input(f"Enter the {i}. number: ")) # If the input is integer, this function adds it to our list. Otherwise 'except' code runs.
      numbers.append(is_int)
      i += 1  
    except: # If the input is not integer, our code warns the user. 
      print("You entered an invalid value. Please give an integer.")

mean = sum(numbers) / len(numbers) # identifying mean value to read the code easily
var = sum(pow(i-mean,2) for i in numbers) / len(numbers)  # identifying variance value to read the code easily
import math
print(f"You entered {len(numbers)} integers: {numbers}\n",
      f"maximum is: {max(numbers)}\n",
      f"minimum is: {min(numbers)}\n",
      f"range is: {range(min(numbers), max(numbers))}\n",
      f"mean is: {sum(numbers) / len(numbers)}\n",
      f"variance is: {sum(pow(i-mean,2) for i in numbers) / len(numbers)}\n",
      f"std deviation is: {math.sqrt(var)}\n",
      )

"""PS. Variance and std deviation values are different in two different methods. Why? The reason can be rounding?"""

# this is extra with statistics
import statistics
print(f"You entered {len(numbers)} integers: {numbers}",
      f"maximum is: {max(numbers)}",
      f"minimum is: {min(numbers)}",
      f"range is: {range(min(numbers), max(numbers))}",
      f"mean is: {statistics.mean(numbers)}",
      f"variance is: {statistics.variance(numbers)}",
      f"std deviation is: {statistics.stdev(numbers)}",
      sep="\n",
      )